# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import builtins as module_0
import lib as module_1
import sty.primitive as module_2


@pytest.mark.xfail(strict=True)
def test_case_0():
    object_0 = module_0.object()
    list_0 = [object_0, object_0]
    module_1.mute(*list_0)


def test_case_1():
    none_type_0 = module_1.mute()


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    list_0 = [none_type_0]
    module_1.unmute(*list_0)


def test_case_3():
    none_type_0 = module_1.unmute()


def test_case_4():
    none_type_0 = module_1.mute()
    register_0 = module_2.Register()
    none_type_1 = module_1.mute()
    register_1 = register_0.copy()
    list_0 = [register_1]
    none_type_2 = module_1.mute(*list_0)
    assert register_1.is_muted is True
    none_type_3 = module_1.mute()
    dict_0 = register_1.as_dict()


@pytest.mark.xfail(strict=True)
def test_case_5():
    none_type_0 = module_1.unmute()
    none_type_1 = module_1.mute()
    bytes_0 = b"\xde?\x85\xfd\x98\xd2"
    register_0 = module_2.Register()
    list_0 = [none_type_1, bytes_0]
    none_type_2 = register_0.set_renderfunc(none_type_1, list_0)
    list_1 = [register_0, register_0]
    none_type_3 = module_1.unmute(*list_1)
    register_1 = module_2.Register()
    var_0 = register_1.as_namedtuple()
    var_0.copy()
